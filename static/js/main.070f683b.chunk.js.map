{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","message","src","avatar","alt","img","angle","invertedBorderRadius","nameText","name","messageText","timeText","time","messageData","HW1","Affair","priorityClass","item","affair","priority","onClick","deleteAffairCallback","_id","button","Affairs","mappedAffairs","data","map","a","key","chAll","filter","active","chHigh","chMiddle","chLow","style","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filteredAffairs","el","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","value","onChange","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","newName","trim","alert","HW3","setUsers","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","input","errorInput","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","disabled","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.070f683b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Affairs_button__34vMv\",\"focus\":\"Affairs_focus__2tewT\",\"active\":\"Affairs_active__MWqFU\",\"affair\":\"Affairs_affair__3o08k\",\"item\":\"Affairs_item__1MZD9\",\"high\":\"Affairs_high__3mKec\",\"middle\":\"Affairs_middle__U5gom\",\"low\":\"Affairs_low__zn56n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2gP3b\",\"img\":\"Message_img__OMPcO\",\"invertedBorderRadius\":\"Message_invertedBorderRadius__3S60O\",\"angle\":\"Message_angle__zS6H5\",\"messageText\":\"Message_messageText__2J6Ox\",\"nameText\":\"Message_nameText__28Pbp\",\"timeText\":\"Message_timeText__1JCFe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__EzDHl\",\"superInput\":\"SuperInputText_superInput__WYtTr\",\"errorInput\":\"SuperInputText_errorInput__3YNMz\",\"error\":\"SuperInputText_error__2h6_D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2XNSz\",\"red\":\"SuperButton_red__Fyvcx\",\"button\":\"SuperButton_button__2cQQY\",\"blink\":\"SuperButton_blink__22lEe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3GAwW\",\"column\":\"HW4_column__1OrwU\",\"testSpanError\":\"HW4_testSpanError__3vfgl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lebel\":\"SuperCheckbox_lebel__1YnCz\",\"checkbox\":\"SuperCheckbox_checkbox__EsbBA\",\"spanClassName\":\"SuperCheckbox_spanClassName__22OUW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2xOC2\"};","import React from 'react'\r\nimport s from './Message.module.css';\r\n\r\nexport type messageDataType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: messageDataType) {\r\n    return (\r\n        <div className={s.message}>\r\n            {/*<div>*/}\r\n            <img src={props.avatar} alt={'avatar'} className={s.img}/>\r\n            {/*//avatar*/}\r\n            {/*</div>*/}\r\n            <div className={s.angle}/>\r\n            {/*//ugolok*/}\r\n\r\n            <div className={s.invertedBorderRadius}>\r\n                {/*// blok s textom*/}\r\n                <div className={s.nameText}>{props.name}</div>\r\n                {/*<div>*/}\r\n                <div className={s.messageText}>{props.message}</div>\r\n                <div className={s.timeText}>{props.time}</div>\r\n                {/*</div>*/}\r\n            </div>\r\n\r\n            {/*<table>*/}\r\n            {/*    <tr>*/}\r\n            {/*        <td valign=\"top\">{props.name}</td>*/}\r\n            {/*        <td valign=\"top\">{props.message}</td>*/}\r\n            {/*        <td valign=\"top\">{props.time}</td>*/}\r\n            {/*    </tr>*/}\r\n            {/*</table>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from './Message';\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'some text',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            {/*<hr/>*/}\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            {/*<hr/>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\nimport {AffairType} from './HW2';\nimport s from './Affairs.module.css';\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (_id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n        props.deleteAffairCallback(props.affair._id)\n    }// need to fix\n    const priorityClass = s.item + ' ' + s[props.affair.priority]\n    return (\n        <div className={s.affair}>\n            <div className={s.item}>{props.affair.name}</div>\n            <div className={priorityClass}>[{props.affair.priority}]</div>\n            {/*show some text*/}\n\n            <button onClick={deleteCallback} className={s.item + ' ' + s.button}>x</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport s from './Affairs.module.css';\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n    filter: FilterType\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter('all')\n    } // need to fix\n    const setHigh = () => {\n        props.setFilter('high')\n    }\n    const setMiddle = () => {\n        props.setFilter('middle')\n    }\n    const setLow = () => {\n        props.setFilter('low')\n    }\n    const chAll = s.button + ' ' + (props.filter === 'all' ? s.active : '')\n    const chHigh = s.button + ' ' + (props.filter === 'high' ? s.active : '')\n    const chMiddle = s.button + ' ' + (props.filter === 'middle' ? s.active : '')\n    const chLow = s.button + ' ' + (props.filter === 'low' ? s.active : '')\n    return (\n        <div style={s}>\n\n            {mappedAffairs}\n\n            <button onClick={setAll} className={chAll}>All</button>\n            <button onClick={setHigh} className={chHigh}>High</button>\n            <button onClick={setMiddle} className={chMiddle}>Middle</button>\n            <button onClick={setLow} className={chLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high' | 'low' | 'middle'\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    if (filter === 'all') return affairs\n    else return [...affairs.filter(el => el.priority === filter)]// need to fix\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return [...affairs.filter(el => el._id !== _id)]\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n                filter={filter}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent} from 'react'\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error ? 's.error' : '' // need to fix with (?:)\n\n    return (\n        <div>\n            <input\n                value={name}\n                onChange={setNameCallback}\n                className={inputClass}/>\n            <button onClick={addUser}>add</button>\n            <span>{totalUsers}</span>\n            {error && <div className=\"error\">{error}</div>}\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from './HW3';\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        setError('');// need to fix any\n        setName(e.currentTarget.value) // need to fix\n    }\n    const addUser = () => {\n        let newName = name.trim();\n        if (newName !== '') {\n            alert(`Hello ${newName}!`)// need to fix\n            addUserCallback(newName)\n            setName('');\n        } else {\n            setError('Title is required');\n        }\n    }\n\n    const totalUsers = users.length // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from 'uuid';\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\n    const addUserCallback = (name: string) => { // need to fix any\n        setUsers([...users, {_id: v1(), name: name}]) // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer\n                users={users}\n                addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from '../../../p2-homeworks/h2/HW2';\nimport HW3 from '../../../p2-homeworks/h3/HW3';\nimport HW4 from '../../../p2-homeworks/h4/HW4';\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW5/>*/}\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}